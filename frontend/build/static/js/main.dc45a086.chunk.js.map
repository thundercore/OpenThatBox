{"version":3,"sources":["App/assets/box-closed.png","App/contexts/Web3Context/Web3Context.tsx","config.ts","App/components/Blockie/Blockie.tsx","App/components/Header/Header.tsx","App/contexts/MinerContractContext/MinerContractContext.tsx","App/components/LoginForm/LoginForm.tsx","App/utils/parseMinerLog.ts","App/service/GameService.ts","App/components/CanvasGame/CanvasGame.tsx","App/components/ScoreDisplay/ScoreDisplay.tsx","App/components/GameLoader/GameLoader.tsx","App/components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Web3Context","React","createContext","setCode","code","provider","JsonRpcProvider","address","isValid","signer","undefined","Web3Provider","children","rpcUrl","useState","myProvider","pollingInterval","setSigner","setValid","useEffect","getBalance","then","val","gt","bigNumberify","console","log","Provider","value","toLowerCase","hdNode","fromSeed","sha256","toUtf8Bytes","join","Wallet","connect","useWeb3Context","useContext","config","process","memo","props","color","spot","rest","data","useMemo","blockies","seed","bgcolor","size","scale","spotcolor","toDataURL","src","useStyles","makeStyles","theme","createStyles","container","justifyContent","title","fontSize","fontFamily","fontWeight","classes","AppBar","position","Toolbar","className","Typography","variant","Button","href","target","Box","display","alignItems","mr","height","width","Context","isLoading","error","MinerContractProvider","contract","setContract","setLoading","setError","contractAddress","Contract","abi","deployed","catch","a","e","useMinerContractContext","setCodeVal","pt","TextField","fullWidth","onChange","evt","label","disabled","onClick","parseMinerLog","x","y","total","toNumber","initialized","Tile","Direction","GameService","isMoving","stateUpdate","Subject","currentUser","image","characters","gameState","map","getCurrentUser","playerPositions","spotColor","Promise","all","this","state","user","makeMap","createImage","joinGame","trans","wait","Mined","loadHistoricalData","watchMovement","Array","fill","Unmined","handleEvent","character","next","on","playerJoinedFilter","filters","PlayerJoined","fromBlock","toBlock","playerMovedFilter","PlayerMoved","getLogs","joinedLogs","concat","forEach","values","interface","parseLog","userAddress","Math","abs","direction","move","Down","canMove","callMove","Up","Left","Right","TileSize","service","ref","useRef","BoxImage","Image","BoxClosed","viewPortX","viewPortY","drawCharacters","ctx","bounds","Object","boundsXLow","boundsXHigh","boundsYLow","boundsYHigh","drawImage","drawUser","requestAnimationFrame","drawGame","current","getContext","clearRect","round","dx","dy","lineWidth","strokeStyle","strokeRect","drawMap","drawCurrentUser","keyPressHandler","useCallback","key","window","addEventListener","removeEventListener","scoreBox","padding","borderRadius","left","transition","transitions","create","border","setState","subscribe","random","sort","c1","c2","slice","idx","style","top","component","parseFloat","formatEther","duration","stepPrecision","initialize","mt","CircularProgress","stop","Boolean","location","hostname","match","ReactDOM","render","createMuiTheme","palette","background","default","primary","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc45a086.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/box-closed.3f0598f3.png\";","import React, { ReactNode, useContext, useEffect, useState } from 'react'\nimport { Signer, Wallet } from 'ethers'\nimport {\n  JsonRpcProvider,\n  Web3Provider as EthersProvider,\n} from 'ethers/providers'\nimport { fromSeed } from 'ethers/utils/hdnode'\nimport { BigNumber, bigNumberify, sha256, toUtf8Bytes } from 'ethers/utils'\nimport { sign } from 'crypto'\n\ninterface IWeb3ContextProps {\n  children: ReactNode\n  rpcUrl: string\n}\n\nexport interface IWeb3Context {\n  setCode(code: string): void\n  signer?: Signer\n  provider: JsonRpcProvider\n  address: string\n  isValid: boolean\n}\n\nconst Web3Context = React.createContext<IWeb3Context>({\n  setCode: (code: string) => {},\n  provider: new JsonRpcProvider(''),\n  address: '',\n  isValid: false,\n  signer: undefined,\n})\n\nexport default function Web3Provider({ children, rpcUrl }: IWeb3ContextProps) {\n  const [provider] = useState(() => {\n    const myProvider = new JsonRpcProvider(rpcUrl)\n    myProvider.pollingInterval = 400\n    return myProvider\n  })\n  const [signer, setSigner] = useState<Wallet | undefined>()\n  const [isValid, setValid] = useState(true)\n\n  const setCode = (code: string) => {\n    const hdNode = fromSeed(sha256('0x' + toUtf8Bytes(code).join('')))\n    setSigner(new Wallet(hdNode).connect(provider))\n  }\n\n  useEffect(\n    () => {\n      if (signer) {\n        setValid(true)\n        signer.getBalance().then((val) => {\n          setValid(val.gt(bigNumberify(0)))\n        })\n      }\n    },\n    [signer]\n  )\n  console.log(signer && signer.address)\n  return (\n    <Web3Context.Provider\n      value={{\n        provider,\n        signer,\n        isValid,\n        address: signer ? signer.address.toLowerCase() : '',\n        setCode,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  )\n}\n\nexport const useWeb3Context = () => useContext(Web3Context)\n","export const config = {\n  rpcUrl: process.env.REACT_APP_RPC_URL!,\n  contractAddress: process.env.REACT_APP_CONTRACT_ADDRESS!,\n}\n","import React, { useMemo } from 'react'\n//@ts-ignore\nimport * as blockies from 'blockies'\n\ninterface IBlockieProps\n  extends React.DetailedHTMLProps<\n      React.ImgHTMLAttributes<HTMLImageElement>,\n      HTMLImageElement\n    > {\n  address: string\n  color: string\n  spot?: boolean\n}\n\nexport default React.memo(function Blockie(props: IBlockieProps) {\n  const { address, color, spot, ...rest } = props\n  const data = useMemo(\n    () =>\n      blockies({\n        seed: address,\n        color,\n        bgcolor: '#00000000',\n        size: 6,\n        scale: 4,\n        spotcolor: spot ? undefined : '#00000000',\n      }).toDataURL(),\n    [address]\n  )\n  return <img {...rest} src={data} />\n})\n","import React from 'react'\nimport {\n  AppBar,\n  Box,\n  createStyles,\n  makeStyles,\n  Theme,\n  Toolbar,\n  Typography,\n} from '@material-ui/core'\nimport { useWeb3Context } from '../../contexts/Web3Context/Web3Context'\nimport Blockie from '../Blockie/Blockie'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles<Theme, IHeaderProps>((theme: Theme) =>\n  createStyles({\n    container: {\n      justifyContent: 'space-between',\n    },\n    title: {\n      fontSize: 22,\n      fontFamily: 'Courier',\n      fontWeight: 700,\n    },\n  })\n)\n\ninterface IHeaderProps {}\n\nexport default React.memo(function Header(props: IHeaderProps) {\n  const classes = useStyles(props)\n  const { address, isValid } = useWeb3Context()\n\n  return (\n    <AppBar position={'relative'}>\n      <Toolbar className={classes.container}>\n        <Typography variant=\"h6\" className={classes.title}>\n          Open That Box\n        </Typography>\n        {address &&\n          isValid && (\n            <Button\n              href={'https://scan.thundercore.com/address/' + address}\n              target={'_blank'}\n            >\n              <Box display={'flex'} alignItems={'center'}>\n                <Box mr={1}>\n                  <Typography>{address}</Typography>\n                </Box>\n                <Blockie\n                  spot\n                  address={address}\n                  height={24}\n                  width={24}\n                  color={'black'}\n                />\n              </Box>\n            </Button>\n          )}\n      </Toolbar>\n    </AppBar>\n  )\n})\n","import React, { ReactNode, useContext, useEffect, useState } from 'react'\nimport { Contract } from 'ethers'\nimport { abi } from './Miner.json'\nimport { useWeb3Context } from '../Web3Context/Web3Context'\n\ninterface IContractContextProps {\n  children?: ReactNode\n  contractAddress: string\n}\n\ninterface IContractContext {\n  contract?: Contract\n  isLoading: boolean\n  error: boolean\n}\n\nconst Context = React.createContext<IContractContext>({\n  isLoading: false,\n  error: false,\n})\n\nexport default function MinerContractProvider(props: IContractContextProps) {\n  const [contract, setContract] = useState<Contract | undefined>()\n  const [isLoading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const { contractAddress } = props\n\n  const { signer, provider } = useWeb3Context()\n\n  useEffect(\n    () => {\n      if (contractAddress && signer) {\n        setLoading(true)\n        setError(false)\n        try {\n          const contract = new Contract(contractAddress, abi as any, signer)\n          contract\n            .deployed()\n            .then((contract) => {\n              setLoading(false)\n              setContract(contract)\n            })\n            .catch((a: any) => {\n              console.log(a)\n              setLoading(false)\n              setError(true)\n              setContract(undefined)\n            })\n        } catch (e) {\n          setLoading(false)\n          setError(true)\n          setContract(undefined)\n        }\n      }\n    },\n    [signer, contractAddress]\n  )\n\n  return (\n    <Context.Provider value={{ contract, isLoading, error }}>\n      {props.children}\n    </Context.Provider>\n  )\n}\n\nexport const useMinerContractContext = () => useContext(Context)\n","import React, { ReactNode, useState } from 'react'\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  makeStyles,\n  TextField,\n  Theme,\n} from '@material-ui/core'\nimport { useWeb3Context } from '../../contexts/Web3Context/Web3Context'\nimport { useMinerContractContext } from '../../contexts/MinerContractContext/MinerContractContext'\n\nconst useStyles = makeStyles<Theme, ILoginFormProps>((theme: Theme) =>\n  createStyles({})\n)\n\ninterface ILoginFormProps {\n  children: ReactNode\n}\n\nexport default React.memo(function LoginForm(props: ILoginFormProps) {\n  const classes = useStyles(props)\n  const { setCode, isValid, address } = useWeb3Context()\n  const { contract, isLoading } = useMinerContractContext()\n  const [code, setCodeVal] = useState('')\n\n  const handleClick = () => {\n    setCode(code)\n  }\n  const isLoggedIn = isValid && address && !!contract\n\n  return !isLoggedIn ? (\n    <Box\n      display={'flex'}\n      pt={8}\n      alignItems={'center'}\n      justifyContent={'center'}\n    >\n      <Box mr={2} width={400}>\n        <TextField\n          fullWidth\n          color={'inherit'}\n          variant={'filled'}\n          error={!!address && !isValid}\n          onChange={(evt) => setCodeVal(evt.target.value)}\n          label={!!address && !isValid ? 'Invalid Code' : 'Code'}\n        />\n      </Box>\n      <Button\n        color=\"primary\"\n        variant={'contained'}\n        disabled={isLoading}\n        onClick={handleClick}\n      >\n        Login\n      </Button>\n    </Box>\n  ) : (\n    <div>{props.children}</div>\n  )\n})\n","import { BigNumber } from 'ethers/utils'\n\nexport function parseMinerLog(\n  address: string,\n  x: BigNumber,\n  y: BigNumber,\n  value: BigNumber,\n  total: BigNumber\n) {\n  return {\n    address: address.toLowerCase(),\n    x: x.toNumber(),\n    y: y.toNumber(),\n    total: total,\n    initialized: true,\n  }\n}\n","import { Contract } from 'ethers'\nimport { parseMinerLog } from '../utils/parseMinerLog'\n//@ts-ignore\nimport * as blockies from 'blockies'\nimport { BigNumber, bigNumberify } from 'ethers/utils'\nimport { Subject } from 'rxjs'\n\nexport enum Tile {\n  Unmined,\n  Mined,\n  Treasure,\n}\n\nexport interface ICharacter {\n  image: string\n  x: number\n  y: number\n  address: string\n  initialized: boolean\n  total: BigNumber\n}\n\nexport enum Direction {\n  Left,\n  Right,\n  Down,\n  Up,\n}\n\nexport class GameService {\n  isMoving = false\n  size: number = 0\n  stateUpdate = new Subject()\n\n  currentUser: ICharacter = {\n    image: '',\n    total: bigNumberify(0),\n    x: 0,\n    y: 0,\n    address: 'fake',\n    initialized: false,\n  }\n  characters: { [key: string]: ICharacter } = {}\n  gameState: number = 0\n  map: any[][] = []\n\n  constructor(\n    private readonly contract: Contract,\n    private readonly address: string\n  ) {}\n\n  private createImage(address: string, spotColor?: boolean) {\n    return blockies({\n      seed: address,\n      color: 'black',\n      bgcolor: '#00000000',\n      size: 6,\n      scale: 4,\n      spotcolor: spotColor ? undefined : '#00000000',\n    }).toDataURL()\n  }\n\n  getCurrentUser = async () => {\n    const position = await this.contract.playerPositions(this.address)\n    return {\n      x: position.x.toNumber(),\n      y: position.y.toNumber(),\n      initialized: position.initialized,\n    }\n  }\n\n  async initialize() {\n    const [user, size, state] = await Promise.all([\n      this.getCurrentUser(),\n      this.contract.size(),\n      this.contract.state(),\n    ])\n    this.size = size.toNumber()\n    this.map = this.makeMap(this.size)\n\n    this.currentUser = {\n      total: bigNumberify(0),\n      address: this.address,\n      image: this.createImage(this.address, true),\n      ...user,\n    }\n\n    if (!this.currentUser.initialized) {\n      const trans = await this.contract.joinGame()\n      await trans.wait()\n      this.currentUser = {\n        ...this.currentUser,\n        ...(await this.getCurrentUser()),\n      }\n    }\n    this.map[this.currentUser.x][this.currentUser.y] = Tile.Mined\n\n    this.gameState = state\n    await this.loadHistoricalData()\n    this.watchMovement()\n  }\n\n  private makeMap(size: number) {\n    return Array(size)\n      .fill(Tile.Unmined)\n      .map((x) => Array(size).fill(Tile.Unmined))\n  }\n\n  private watchMovement() {\n    const handleEvent = (\n      address: string,\n      x: BigNumber,\n      y: BigNumber,\n      val: BigNumber,\n      total: BigNumber\n    ) => {\n      address = address.toLowerCase()\n      const character = parseMinerLog(address, x, y, val, total)\n      if (address !== this.address) {\n        this.characters[address] = {\n          ...character,\n          image: this.characters[address]\n            ? this.characters[address].image\n            : this.createImage(address),\n        }\n        this.map[character.x][character.y] = Tile.Mined\n      } else {\n        this.currentUser.total = character.total\n      }\n      this.stateUpdate.next()\n    }\n    this.contract.on('PlayerJoined', handleEvent)\n    this.contract.on('PlayerMoved', handleEvent)\n  }\n\n  private async loadHistoricalData() {\n    const playerJoinedFilter = {\n      ...this.contract.filters.PlayerJoined(),\n      fromBlock: '0x0',\n      toBlock: 'latest',\n    }\n    const playerMovedFilter = {\n      ...this.contract.filters.PlayerMoved(),\n      fromBlock: '0x0',\n      toBlock: 'latest',\n    }\n    const joinedLogs = await this.contract.provider.getLogs(playerJoinedFilter)\n    const logs = joinedLogs.concat(\n      await this.contract.provider.getLogs(playerMovedFilter)\n    )\n    logs.forEach((log) => {\n      const { values } = this.contract.interface.parseLog(log)\n      const userAddress = values[0].toLowerCase()\n      const character = {\n        ...parseMinerLog(\n          userAddress,\n          values[1],\n          values[2],\n          values[3],\n          values[4]\n        ),\n      }\n      if (userAddress !== this.address) {\n        this.characters[userAddress] = {\n          ...character,\n          image: this.createImage(userAddress),\n        }\n      } else {\n        this.currentUser.total = character.total\n      }\n      this.map[character.x][character.y] = Tile.Mined\n    })\n  }\n\n  canMove(x: number, y: number) {\n    return (\n      x >= 0 &&\n      y >= 0 &&\n      x < this.size &&\n      y < this.size &&\n      Math.abs(this.currentUser.x - x) + Math.abs(this.currentUser.y - y) === 1\n    )\n  }\n\n  async callMove(direction: Direction) {\n    const trans = await this.contract.move(direction)\n    await trans.wait()\n  }\n\n  async move(direction: Direction) {\n    console.log('move', direction)\n    const { x, y } = this.currentUser\n    if (this.isMoving) {\n      return\n    }\n    this.isMoving = true\n    try {\n      if (direction === Direction.Down && this.canMove(x, y + 1)) {\n        this.currentUser.y += 0.4\n        await this.callMove(Direction.Down)\n        this.currentUser.y = y + 1\n      } else if (direction === Direction.Up && this.canMove(x, y - 1)) {\n        this.currentUser.y -= 0.4\n        await this.callMove(Direction.Up)\n        this.currentUser.y = y - 1\n      } else if (direction === Direction.Left && this.canMove(x - 1, y)) {\n        this.currentUser.x -= 0.4\n        await this.callMove(Direction.Left)\n        this.currentUser.x = x - 1\n      } else if (direction === Direction.Right && this.canMove(x + 1, y)) {\n        this.currentUser.x += 0.4\n        await this.callMove(Direction.Right)\n        this.currentUser.x = x + 1\n      }\n      this.map[this.currentUser.x][this.currentUser.y] = Tile.Mined\n      this.isMoving = false\n    } catch (e) {\n      this.isMoving = false\n      this.currentUser.y = y\n      this.currentUser.x = x\n    }\n  }\n}\n","import React, { useEffect, useRef } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\nimport {\n  Direction,\n  GameService,\n  ICharacter,\n  Tile,\n} from '../../service/GameService'\nimport BoxClosed from '../../assets/box-closed.png'\n\nconst useStyles = makeStyles<Theme, ICanvasGameProps>((theme: Theme) =>\n  createStyles({})\n)\n\ninterface ICanvasGameProps {\n  service: GameService\n  stop: boolean\n}\n\nconst TileSize = 32\n\nexport default React.memo(function CanvasGame(props: ICanvasGameProps) {\n  const classes = useStyles(props)\n  const { service } = props\n  const ref = useRef<any>()\n  const BoxImage = new Image()\n  BoxImage.src = BoxClosed\n\n  const viewPortX = 29\n  const viewPortY = 19\n\n  function drawMap(\n    ctx: CanvasRenderingContext2D,\n    bounds: any,\n    currentUser: ICharacter\n  ) {\n    for (let x = bounds.boundsXLow; x <= bounds.boundsXHigh; x++) {\n      for (let y = bounds.boundsYLow; y <= bounds.boundsYHigh; y++) {\n        const dx = (x - currentUser.x + viewPortX / 2) * TileSize\n        const dy = (y - currentUser.y + viewPortY / 2) * TileSize\n        ctx.lineWidth = 2\n        ctx.strokeStyle = 'black'\n        ctx.strokeRect(dx, dy, TileSize, TileSize)\n        if (service.map[x][y] === Tile.Unmined) {\n          ctx.drawImage(BoxImage, dx + 5, dy + 5, 20, 20)\n        }\n      }\n    }\n  }\n\n  function drawCharacters(\n    ctx: CanvasRenderingContext2D,\n    bounds: any,\n    currentUser: ICharacter\n  ) {\n    const { characters } = service\n    Object.values(characters).forEach((user) => {\n      if (\n        user.x >= bounds.boundsXLow &&\n        user.x <= bounds.boundsXHigh &&\n        user.y >= bounds.boundsYLow &&\n        user.y <= bounds.boundsYHigh\n      ) {\n        drawUser(ctx, user, currentUser)\n      }\n    })\n  }\n\n  function drawUser(\n    ctx: CanvasRenderingContext2D,\n    user: ICharacter,\n    currentUser: ICharacter\n  ) {\n    const image = new Image()\n    image.src = user.image\n    ctx.drawImage(\n      image,\n      (user.x - currentUser.x + viewPortX / 2) * TileSize + 6,\n      (user.y - currentUser.y + viewPortY / 2) * TileSize + 6,\n      20,\n      20\n    )\n  }\n\n  function drawCurrentUser(ctx: CanvasRenderingContext2D, user: ICharacter) {\n    const image = new Image()\n    image.src = user.image\n    // always in the center\n    ctx.drawImage(\n      image,\n      (viewPortX * TileSize) / 2 + 6,\n      (viewPortY * TileSize) / 2 + 6,\n      20,\n      20\n    )\n  }\n\n  function drawGame() {\n    if (!ref.current) {\n      return\n    }\n    const ctx: CanvasRenderingContext2D = ref.current.getContext('2d')\n    ctx.clearRect(0, 0, viewPortX * TileSize, viewPortY * TileSize)\n    const { currentUser } = service\n    // always in the middle\n    let boundsXLow =\n      Math.round(currentUser.x) - 15 < 0 ? 0 : Math.round(currentUser.x) - 15\n    let boundsXHigh =\n      Math.round(currentUser.x) + 14 > service.size - 1\n        ? service.size - 1\n        : Math.round(currentUser.x) + 14\n    let boundsYLow =\n      Math.round(currentUser.y) - 10 < 0 ? 0 : Math.round(currentUser.y) - 10\n    let boundsYHigh =\n      Math.round(currentUser.y) + 10 > service.size - 1\n        ? service.size - 1\n        : Math.round(currentUser.y) + 10\n\n    boundsXHigh =\n      boundsXHigh > service.size - 1 ? service.size - 1 : boundsXHigh\n    boundsXLow = boundsXLow < 0 ? 0 : boundsXLow\n    boundsYHigh =\n      boundsYHigh > service.size - 1 ? service.size - 1 : boundsYHigh\n    boundsYLow = boundsYLow < 0 ? 0 : boundsYLow\n    const bounds = { boundsXHigh, boundsXLow, boundsYHigh, boundsYLow }\n\n    drawMap(ctx, bounds, service.currentUser)\n\n    drawCharacters(ctx, bounds, service.currentUser)\n    drawCurrentUser(ctx, service.currentUser)\n\n    requestAnimationFrame(drawGame)\n  }\n  requestAnimationFrame(drawGame)\n\n  const keyPressHandler = React.useCallback(\n    (evt: KeyboardEvent) => {\n      if (evt.key === 'ArrowDown' || evt.key === 's') {\n        service.move(Direction.Down)\n      } else if (evt.key === 'ArrowUp' || evt.key === 'w') {\n        service.move(Direction.Up)\n      } else if (evt.key === 'ArrowLeft' || evt.key === 'a') {\n        service.move(Direction.Left)\n      } else if (evt.key === 'ArrowRight' || evt.key === 'd') {\n        service.move(Direction.Right)\n      }\n    },\n    [service]\n  )\n\n  useEffect(\n    () => {\n      window.addEventListener('keydown', keyPressHandler)\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener('keydown', keyPressHandler)\n      }\n    },\n    [keyPressHandler]\n  )\n\n  return (\n    <canvas\n      ref={ref}\n      width={viewPortX * TileSize}\n      height={viewPortY * TileSize}\n    />\n  )\n})\n","import React, { useEffect, useState } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\nimport { GameService } from '../../service/GameService'\nimport Box from '@material-ui/core/Box'\nimport Blockie from '../Blockie/Blockie'\nimport Typography from '@material-ui/core/Typography'\n//@ts-ignore\nimport AnimatedNumber from 'react-animated-number'\nimport { formatEther } from 'ethers/utils'\n\nconst useStyles = makeStyles<Theme, IScoreDisplayProps>((theme: Theme) =>\n  createStyles({\n    scoreBox: {\n      width: 200,\n      padding: 8,\n      borderRadius: 4,\n      height: 50,\n      position: 'absolute',\n      left: 0,\n      transition: theme.transitions.create('all'),\n      border: '1px solid black  ',\n    },\n  })\n)\n\ninterface IScoreDisplayProps {\n  service: GameService\n}\n\nexport default React.memo(function ScoreDisplay(props: IScoreDisplayProps) {\n  const classes = useStyles(props)\n  const [test, setState] = useState(1)\n\n  useEffect(\n    () => {\n      props.service.stateUpdate.subscribe(() => {\n        setState(Math.random())\n      })\n    },\n    [props.service]\n  )\n\n  return (\n    <div>\n      {Object.values(props.service.characters)\n        .sort((c1, c2) => (c2.total.gt(c1.total) ? 1 : -1))\n        .slice(0, 10)\n        .concat([props.service.currentUser])\n        .sort((c1, c2) => (c2.total.gt(c1.total) ? 1 : -1))\n        .map(({ address, total }, idx) => (\n          <Box\n            key={address}\n            display={'flex'}\n            alignItems={'center'}\n            className={classes.scoreBox}\n            style={{\n              top: idx * 50,\n            }}\n          >\n            <Box mr={2}>\n              <Blockie\n                address={address}\n                color={'black'}\n                spot={address === props.service.currentUser.address}\n              />\n            </Box>\n            <AnimatedNumber\n              component={Typography}\n              value={parseFloat(formatEther(total))}\n              variant={'h6'}\n              duration={500}\n              stepPrecision={2}\n            />\n          </Box>\n        ))}\n    </div>\n  )\n})\n","import React, { useEffect, useState } from 'react'\nimport {\n  CircularProgress,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core'\nimport { useWeb3Context } from '../../contexts/Web3Context/Web3Context'\nimport { useMinerContractContext } from '../../contexts/MinerContractContext/MinerContractContext'\nimport CanvasGame from '../CanvasGame/CanvasGame'\nimport { GameService } from '../../service/GameService'\nimport Box from '@material-ui/core/Box'\nimport ScoreDisplay from '../ScoreDisplay/ScoreDisplay'\n\nconst useStyles = makeStyles<Theme, IGameLoaderProps>((theme: Theme) =>\n  createStyles({})\n)\n\ninterface IGameLoaderProps {}\n\nexport default React.memo(function GameLoader(props: IGameLoaderProps) {\n  const contractContext = useMinerContractContext()\n  const contract = contractContext.contract!\n  const { address } = useWeb3Context()\n  const [service] = useState(new GameService(contract, address))\n  const [isLoading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  useEffect(\n    () => {\n      service\n        .initialize()\n        .then(() => setLoading(false))\n        .catch((a) => {\n          console.log(a)\n          setError(true)\n        })\n    },\n    [service]\n  )\n\n  if (error) {\n    return <Typography>Please Refresh the Page and Try again</Typography>\n  }\n  return isLoading ? (\n    <Box\n      display={'flex'}\n      alignItems={'center'}\n      mt={10}\n      justifyContent={'center'}\n    >\n      <CircularProgress />\n    </Box>\n  ) : (\n    <Box display={'flex'} mt={6} justifyContent={'center'}>\n      <Box width={300} mr={4} position={'relative'}>\n        <ScoreDisplay service={service} />\n      </Box>\n      <Box>\n        <CanvasGame service={service} stop={false} />\n      </Box>\n    </Box>\n  )\n})\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\nimport Web3Provider from '../../contexts/Web3Context/Web3Context'\nimport { config } from '../../../config'\nimport Header from '../Header/Header'\nimport MinerContractProvider from '../../contexts/MinerContractContext/MinerContractContext'\nimport LoginForm from '../LoginForm/LoginForm'\nimport GameLoader from '../GameLoader/GameLoader'\n\nconst useStyles = makeStyles<Theme, IAppProps>((theme: Theme) =>\n  createStyles({})\n)\n\ninterface IAppProps {}\n\nexport default React.memo(function App(props: IAppProps) {\n  const classes = useStyles(props)\n  return (\n    <Web3Provider\n      rpcUrl={config.rpcUrl}\n      // rpcUrl={'https://mainnet-rpc.thundercore.com'}\n      // rpcUrl={'https://rpc.platform.dev.tt-eng.com'}\n    >\n      <MinerContractProvider\n        contractAddress={config.contractAddress}\n        // contractAddress={'0x13eEc053BAa2eE73E8F198BB457aC0e48817cC79'}\n      >\n        <Header />\n        <LoginForm>\n          <GameLoader />\n        </LoginForm>\n      </MinerContractProvider>\n    </Web3Provider>\n  )\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/components/App/App'\nimport CssBaseline from '@material-ui/core/CssBaseline/CssBaseline'\nimport { unregister } from './serviceWorker'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\n\nReactDOM.render(\n  <MuiThemeProvider\n    theme={createMuiTheme({\n      palette: {\n        background: {\n          default: '#edeceb',\n        },\n        primary: {\n          main: '#ffe81c',\n        },\n      },\n    })}\n  >\n    <CssBaseline>\n      <App />\n    </CssBaseline>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n)\n\nunregister()\n"],"sourceRoot":""}